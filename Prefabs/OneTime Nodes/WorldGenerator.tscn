[gd_scene load_steps=2 format=3 uid="uid://cjgm7mifdg2cq"]

[sub_resource type="GDScript" id="GDScript_8bb0u"]
script/source = "extends Node2D
##World Generator##

#Map Size
const MAP_WIDTH: float = 370
const MAP_HEIGHT: float = 330

#region Tilemap ID's
#Azuria#
const AZURIA_TILEMAP_SOURCE_ID: int = 0
const AZURIA_STONE: Array[Vector2i] = [Vector2i(0, 0), Vector2i(0, 1), Vector2(0, 2), Vector2i(0, 3)]
var AZURIA_COAL: GenerationTile = GenerationTile.new([Vector2i(1, 0), Vector2i(2, 0), Vector2(3, 0), Vector2i(4, 0)], 60, 10, 3)
var AZURIA_IRON: GenerationTile = GenerationTile.new([Vector2i(5, 0), Vector2i(6, 0), Vector2(7, 0), Vector2i(8, 0)], 40, 5, 2)
var AZURIA_COPPER: GenerationTile = GenerationTile.new([Vector2i(5, 1), Vector2i(6, 1), Vector2(7, 1), Vector2i(8, 1)], 20, 5, 3)
var AZURIA_LAPISLAZULI: GenerationTile = GenerationTile.new([Vector2i(1, 3), Vector2i(2, 3), Vector2(3, 3), Vector2i(4, 3)], 20, 3, 2)
var AZURIA_CRUDE_OIL: GenerationTile = GenerationTile.new([Vector2i(1, 2), Vector2i(2, 2), Vector2(3, 2), Vector2i(4, 2)], 10, 2, 2)
var AZURIA_GOLD: GenerationTile = GenerationTile.new([Vector2i(5, 2), Vector2i(6, 2), Vector2(7, 2), Vector2i(8, 2)], 10, 2, 2)
var AZURIA_ORES: Array[GenerationTile] = [
	AZURIA_COAL,
	AZURIA_IRON,
	AZURIA_COPPER,
	AZURIA_LAPISLAZULI,
	AZURIA_CRUDE_OIL,
	AZURIA_GOLD
]

#Bukat#
const BUKAT_TILEMAP_SOURCE_ID: int = 1
const BUKAT_CONBO: Array[Vector2i] = [Vector2i(0, 0), Vector2i(0, 1), Vector2(0, 2), Vector2i(0, 3)]
var BUKAT_MUST: GenerationTile = GenerationTile.new([Vector2i(1, 1), Vector2i(2, 1), Vector2(3, 1), Vector2i(4, 1)], 40, 7, 3)
var BUKAT_KEPPLER: GenerationTile = GenerationTile.new([Vector2i(5, 0), Vector2i(6, 0), Vector2(7, 0), Vector2i(8, 0)], 20, 4, 3)
var BUKAT_CRUDE_OIL: GenerationTile = GenerationTile.new([Vector2i(1, 0), Vector2i(2, 0), Vector2(3, 0), Vector2i(4, 0)], 10, 2, 2)
var BUKAT_ORES: Array[GenerationTile] = [
	BUKAT_MUST,
	BUKAT_CRUDE_OIL,
	BUKAT_KEPPLER
]

#Mable#
const MABLE_TILEMAP_SOURCE_ID: int = 2
const MABLE_GRASS: Array[Vector2i] = [Vector2i(0, 0), Vector2i(0, 1), Vector2(0, 2), Vector2i(0, 3)]
var MABLE_ORES: Array[GenerationTile] = [
	
]
#endregion

#Varialbes for porcess
var rng: RandomNumberGenerator = RandomNumberGenerator.new()

func _ready() -> void:
	rng.seed = Singelton.GameSeed
	generate_world($\"../Azuria/TileMap\", AZURIA_TILEMAP_SOURCE_ID, AZURIA_STONE, AZURIA_ORES, 3)
	generate_world($\"../Bukat/TileMap\", BUKAT_TILEMAP_SOURCE_ID, BUKAT_CONBO, BUKAT_ORES, 8)
	generate_world($\"../Mable/TileMap\", MABLE_TILEMAP_SOURCE_ID, MABLE_GRASS, MABLE_ORES, 5)

func generate_world(tilemap: TileMapLayer, ID: int, Ground: Array[Vector2i], Ores: Array[GenerationTile], oreProb: int) -> void:
	
	var tile_var: int #Tile variation
	
	#Generate Stone underground
	for x: int in range(-MAP_WIDTH/2, MAP_WIDTH/2):
		for y: int in range(-MAP_HEIGHT/2, MAP_HEIGHT/2):
			tile_var = rng.randi_range(0, (Ground.size()-1)) #Generate Tile variation
			tilemap.set_cell(Vector2(x,y), ID, Ground[tile_var]) #Set Tile
	
	#Generate Ores
	var tile: Array[Vector2i]
	var random_value: float
	var number_of_tiles: int
	var radius_of_tiles: int
	var new_pos: Vector2
	var fullProb: int = 0
	
	for x: int in range(-MAP_WIDTH/2, MAP_WIDTH/2):
		for y: int in range(-MAP_HEIGHT/2, MAP_HEIGHT/2):
			tile = []
			random_value = (rng.randi_range(0, (150000/oreProb)))
			
			#Generate if and what ore should be placed
			for oreTile: GenerationTile in Ores:
				fullProb += oreTile.prob
				if random_value < fullProb && tile == []:
					tile = oreTile.Atlas_ID
					number_of_tiles = oreTile.number_of_tiles
					radius_of_tiles = oreTile.radius_of_tiles
			fullProb = 0
			
			#Place Ore and more ores around it
			if tile != []:
				#Place Ore
				tile_var = rng.randi_range(0, (tile.size()-1)) #Generate Tile variation
				tilemap.set_cell(Vector2(x,y), ID, tile[tile_var])
				
				#Place more Ores around it
				for i in range(number_of_tiles):
					new_pos = Vector2(x, y) + Vector2(rng.randi_range(0, radius_of_tiles), rng.randi_range(0, radius_of_tiles))
					tile_var = rng.randi_range(0, (tile.size()-1)) #Generate Tile variation
					tilemap.set_cell(new_pos, ID, tile[tile_var])
	
	queue_free()
"

[node name="WorldGenerator" type="Node2D"]
script = SubResource("GDScript_8bb0u")
